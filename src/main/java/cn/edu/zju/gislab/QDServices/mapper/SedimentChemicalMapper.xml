<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.zju.gislab.QDServices.mapper.SedimentChemicalMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.zju.gislab.QDServices.po.SedimentChemical" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="layerid" property="layerid" jdbcType="INTEGER" />
    <result column="no" property="no" jdbcType="INTEGER" />
    <result column="station" property="station" jdbcType="VARCHAR" />
    <result column="lon" property="lon" jdbcType="NUMERIC" />
    <result column="lat" property="lat" jdbcType="NUMERIC" />
    <result column="mtime" property="mtime" jdbcType="TIMESTAMP" />
    <result column="depth" property="depth" jdbcType="NUMERIC" />
    <result column="level" property="level" jdbcType="VARCHAR" />
    <result column="ph" property="ph" jdbcType="NUMERIC" />
    <result column="pco2" property="pco2" jdbcType="NUMERIC" />
    <result column="As" property="as" jdbcType="NUMERIC" />
    <result column="cd" property="cd" jdbcType="NUMERIC" />
    <result column="cu" property="cu" jdbcType="NUMERIC" />
    <result column="hg" property="hg" jdbcType="NUMERIC" />
    <result column="pb" property="pb" jdbcType="NUMERIC" />
    <result column="zn" property="zn" jdbcType="NUMERIC" />
    <result column="toc" property="toc" jdbcType="NUMERIC" />
    <result column="tn" property="tn" jdbcType="NUMERIC" />
    <result column="tp" property="tp" jdbcType="NUMERIC" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, layerid, no, station, lon, lat, mtime, depth, level, ph, pco2, As, cd, cu, hg, 
    pb, zn, toc, tn, tp
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.zju.gislab.QDServices.po.SedimentChemicalExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sediment_chemical
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sediment_chemical
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sediment_chemical
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.zju.gislab.QDServices.po.SedimentChemicalExample" >
    delete from sediment_chemical
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.zju.gislab.QDServices.po.SedimentChemical" >
    insert into sediment_chemical (id, layerid, no, 
      station, lon, lat, 
      mtime, depth, level, 
      ph, pco2, As, cd, 
      cu, hg, pb, zn, 
      toc, tn, tp)
    values (#{id,jdbcType=INTEGER}, #{layerid,jdbcType=INTEGER}, #{no,jdbcType=INTEGER}, 
      #{station,jdbcType=VARCHAR}, #{lon,jdbcType=NUMERIC}, #{lat,jdbcType=NUMERIC}, 
      #{mtime,jdbcType=TIMESTAMP}, #{depth,jdbcType=NUMERIC}, #{level,jdbcType=VARCHAR}, 
      #{ph,jdbcType=NUMERIC}, #{pco2,jdbcType=NUMERIC}, #{as,jdbcType=NUMERIC}, #{cd,jdbcType=NUMERIC}, 
      #{cu,jdbcType=NUMERIC}, #{hg,jdbcType=NUMERIC}, #{pb,jdbcType=NUMERIC}, #{zn,jdbcType=NUMERIC}, 
      #{toc,jdbcType=NUMERIC}, #{tn,jdbcType=NUMERIC}, #{tp,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.zju.gislab.QDServices.po.SedimentChemical" >
    insert into sediment_chemical
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="layerid != null" >
        layerid,
      </if>
      <if test="no != null" >
        no,
      </if>
      <if test="station != null" >
        station,
      </if>
      <if test="lon != null" >
        lon,
      </if>
      <if test="lat != null" >
        lat,
      </if>
      <if test="mtime != null" >
        mtime,
      </if>
      <if test="depth != null" >
        depth,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="ph != null" >
        ph,
      </if>
      <if test="pco2 != null" >
        pco2,
      </if>
      <if test="as != null" >
        As,
      </if>
      <if test="cd != null" >
        cd,
      </if>
      <if test="cu != null" >
        cu,
      </if>
      <if test="hg != null" >
        hg,
      </if>
      <if test="pb != null" >
        pb,
      </if>
      <if test="zn != null" >
        zn,
      </if>
      <if test="toc != null" >
        toc,
      </if>
      <if test="tn != null" >
        tn,
      </if>
      <if test="tp != null" >
        tp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="layerid != null" >
        #{layerid,jdbcType=INTEGER},
      </if>
      <if test="no != null" >
        #{no,jdbcType=INTEGER},
      </if>
      <if test="station != null" >
        #{station,jdbcType=VARCHAR},
      </if>
      <if test="lon != null" >
        #{lon,jdbcType=NUMERIC},
      </if>
      <if test="lat != null" >
        #{lat,jdbcType=NUMERIC},
      </if>
      <if test="mtime != null" >
        #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="depth != null" >
        #{depth,jdbcType=NUMERIC},
      </if>
      <if test="level != null" >
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="ph != null" >
        #{ph,jdbcType=NUMERIC},
      </if>
      <if test="pco2 != null" >
        #{pco2,jdbcType=NUMERIC},
      </if>
      <if test="as != null" >
        #{as,jdbcType=NUMERIC},
      </if>
      <if test="cd != null" >
        #{cd,jdbcType=NUMERIC},
      </if>
      <if test="cu != null" >
        #{cu,jdbcType=NUMERIC},
      </if>
      <if test="hg != null" >
        #{hg,jdbcType=NUMERIC},
      </if>
      <if test="pb != null" >
        #{pb,jdbcType=NUMERIC},
      </if>
      <if test="zn != null" >
        #{zn,jdbcType=NUMERIC},
      </if>
      <if test="toc != null" >
        #{toc,jdbcType=NUMERIC},
      </if>
      <if test="tn != null" >
        #{tn,jdbcType=NUMERIC},
      </if>
      <if test="tp != null" >
        #{tp,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.zju.gislab.QDServices.po.SedimentChemicalExample" resultType="java.lang.Integer" >
    select count(*) from sediment_chemical
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sediment_chemical
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.layerid != null" >
        layerid = #{record.layerid,jdbcType=INTEGER},
      </if>
      <if test="record.no != null" >
        no = #{record.no,jdbcType=INTEGER},
      </if>
      <if test="record.station != null" >
        station = #{record.station,jdbcType=VARCHAR},
      </if>
      <if test="record.lon != null" >
        lon = #{record.lon,jdbcType=NUMERIC},
      </if>
      <if test="record.lat != null" >
        lat = #{record.lat,jdbcType=NUMERIC},
      </if>
      <if test="record.mtime != null" >
        mtime = #{record.mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.depth != null" >
        depth = #{record.depth,jdbcType=NUMERIC},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.ph != null" >
        ph = #{record.ph,jdbcType=NUMERIC},
      </if>
      <if test="record.pco2 != null" >
        pco2 = #{record.pco2,jdbcType=NUMERIC},
      </if>
      <if test="record.as != null" >
        As = #{record.as,jdbcType=NUMERIC},
      </if>
      <if test="record.cd != null" >
        cd = #{record.cd,jdbcType=NUMERIC},
      </if>
      <if test="record.cu != null" >
        cu = #{record.cu,jdbcType=NUMERIC},
      </if>
      <if test="record.hg != null" >
        hg = #{record.hg,jdbcType=NUMERIC},
      </if>
      <if test="record.pb != null" >
        pb = #{record.pb,jdbcType=NUMERIC},
      </if>
      <if test="record.zn != null" >
        zn = #{record.zn,jdbcType=NUMERIC},
      </if>
      <if test="record.toc != null" >
        toc = #{record.toc,jdbcType=NUMERIC},
      </if>
      <if test="record.tn != null" >
        tn = #{record.tn,jdbcType=NUMERIC},
      </if>
      <if test="record.tp != null" >
        tp = #{record.tp,jdbcType=NUMERIC},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sediment_chemical
    set id = #{record.id,jdbcType=INTEGER},
      layerid = #{record.layerid,jdbcType=INTEGER},
      no = #{record.no,jdbcType=INTEGER},
      station = #{record.station,jdbcType=VARCHAR},
      lon = #{record.lon,jdbcType=NUMERIC},
      lat = #{record.lat,jdbcType=NUMERIC},
      mtime = #{record.mtime,jdbcType=TIMESTAMP},
      depth = #{record.depth,jdbcType=NUMERIC},
      level = #{record.level,jdbcType=VARCHAR},
      ph = #{record.ph,jdbcType=NUMERIC},
      pco2 = #{record.pco2,jdbcType=NUMERIC},
      As = #{record.as,jdbcType=NUMERIC},
      cd = #{record.cd,jdbcType=NUMERIC},
      cu = #{record.cu,jdbcType=NUMERIC},
      hg = #{record.hg,jdbcType=NUMERIC},
      pb = #{record.pb,jdbcType=NUMERIC},
      zn = #{record.zn,jdbcType=NUMERIC},
      toc = #{record.toc,jdbcType=NUMERIC},
      tn = #{record.tn,jdbcType=NUMERIC},
      tp = #{record.tp,jdbcType=NUMERIC}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.zju.gislab.QDServices.po.SedimentChemical" >
    update sediment_chemical
    <set >
      <if test="layerid != null" >
        layerid = #{layerid,jdbcType=INTEGER},
      </if>
      <if test="no != null" >
        no = #{no,jdbcType=INTEGER},
      </if>
      <if test="station != null" >
        station = #{station,jdbcType=VARCHAR},
      </if>
      <if test="lon != null" >
        lon = #{lon,jdbcType=NUMERIC},
      </if>
      <if test="lat != null" >
        lat = #{lat,jdbcType=NUMERIC},
      </if>
      <if test="mtime != null" >
        mtime = #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="depth != null" >
        depth = #{depth,jdbcType=NUMERIC},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="ph != null" >
        ph = #{ph,jdbcType=NUMERIC},
      </if>
      <if test="pco2 != null" >
        pco2 = #{pco2,jdbcType=NUMERIC},
      </if>
      <if test="as != null" >
        As = #{as,jdbcType=NUMERIC},
      </if>
      <if test="cd != null" >
        cd = #{cd,jdbcType=NUMERIC},
      </if>
      <if test="cu != null" >
        cu = #{cu,jdbcType=NUMERIC},
      </if>
      <if test="hg != null" >
        hg = #{hg,jdbcType=NUMERIC},
      </if>
      <if test="pb != null" >
        pb = #{pb,jdbcType=NUMERIC},
      </if>
      <if test="zn != null" >
        zn = #{zn,jdbcType=NUMERIC},
      </if>
      <if test="toc != null" >
        toc = #{toc,jdbcType=NUMERIC},
      </if>
      <if test="tn != null" >
        tn = #{tn,jdbcType=NUMERIC},
      </if>
      <if test="tp != null" >
        tp = #{tp,jdbcType=NUMERIC},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.zju.gislab.QDServices.po.SedimentChemical" >
    update sediment_chemical
    set layerid = #{layerid,jdbcType=INTEGER},
      no = #{no,jdbcType=INTEGER},
      station = #{station,jdbcType=VARCHAR},
      lon = #{lon,jdbcType=NUMERIC},
      lat = #{lat,jdbcType=NUMERIC},
      mtime = #{mtime,jdbcType=TIMESTAMP},
      depth = #{depth,jdbcType=NUMERIC},
      level = #{level,jdbcType=VARCHAR},
      ph = #{ph,jdbcType=NUMERIC},
      pco2 = #{pco2,jdbcType=NUMERIC},
      As = #{as,jdbcType=NUMERIC},
      cd = #{cd,jdbcType=NUMERIC},
      cu = #{cu,jdbcType=NUMERIC},
      hg = #{hg,jdbcType=NUMERIC},
      pb = #{pb,jdbcType=NUMERIC},
      zn = #{zn,jdbcType=NUMERIC},
      toc = #{toc,jdbcType=NUMERIC},
      tn = #{tn,jdbcType=NUMERIC},
      tp = #{tp,jdbcType=NUMERIC}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>